2-matrix_divided.py
=====================
This is a file with function matrix_divided(matrix, div) that divides all the elements of a matrix.It then returns all elements divided by div to two decimal places

::

	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	>>> matrix = [
	...	[7, 14, 21],
	...	[28, 35, 42]
	... ]

	>>> print(matrix_divided(matrix, 7))
	[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Maximum of two decimal places

::
	
	>>> matrix = [
	...	[3, 4, 6],
	...	[7, 8, 9]
	... ]

	>>> print(matrix_divided(matrix, 7))
	[[0.43, 0.57, 0.86], [1.0, 1.14, 1.29]]

::

	>>> print(matrix)
	[[3, 4, 6], [7, 8, 9]]

when it comes to floating numbers

::

	>>> matrix = [
	...	[1.5, -2.3, 4.1],
	...	[5.3, 6.7, -8.3]
	... ]

	>>> print(matrix_divided(matrix, 7))
	[[0.21, -0.33, 0.59], [0.76, 0.96, -1.19]]

Combination of floats and ints works

::
	>>> matrix = [
	...	[2, 3.5, 4.5],
	...	[-5.1, 6, 7.4]
	... ]

	>>> print(matrix_divided(matrix, 7))
	[[0.29, 0.5, 0.64], [-0.73, 0.86, 1.06]]

The matrix needs to be a list with lists that have floats and integers if not raise TypeError
::

	>>> matrix = "if its not a list"
	>>> print(matrix_divided(matrix, 7))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

::

	>>> matrix = None
	>>> print(matrix_divided(matrix, 7))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

If the list is empty

:: 

	>>> matrix = []
	>>> print(matrix_divided(matrix, 7))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Empty list of lists

::

	>>> matrix = [[]]
	>>> print(matrix_divided(matrix, 7))
	[[]]

If not a list of lists

::


	>>> matrix = [2, 3, 4]
	>>> print(matrix_divided(matrix, 7))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

If any element in the list is not an int or float

::

	>>> matrix = [
	...	[3, "way", 2],
	...	[4, "karibuni", 6]
	... ]

	>>> print(matrix_divided(matrix, 7))
	Traceback (most recent call last):	
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row in matrix must be of same size otherwise TypeError

::

	>>> matrix = [
	...	[5, 3, 2, 1],
	...	[7, 9, 6]
	... ]

	>>> print(matrix_divided(matrix, 7))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

The div has to be a float or a in otherwise TypeError is raised


::

	>>> matrix = [
	...	[4, 2, 8],
	...	[6, 5, 5]
	... ]

	>>> print(matrix_divided(matrix, "patience"))
	Traceback (most recent call last):
	TypeError: div must be a number

div should not be number 0 otherwise raise ZeroDivisionError


::

	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

div not passed

::

	>>> print(matrix_divided(matrix, None))
	Traceback (most recent call last):
	TypeError: div must be a number
